/*
 * RESTAPISDKLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package localhost.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;

/**
 * This is a model class for TspublicRestV2DatabaseTableCreateRequest type.
 */
public class TspublicRestV2DatabaseTableCreateRequest {
    private CreateDatabaseEnum createDatabase;
    private String schema;

    /**
     * Default constructor.
     */
    public TspublicRestV2DatabaseTableCreateRequest() {
        createDatabase = CreateDatabaseEnum.ENUM_TRUE;
    }

    /**
     * Initialization constructor.
     * @param  createDatabase  CreateDatabaseEnum value for createDatabase.
     * @param  schema  String value for schema.
     */
    public TspublicRestV2DatabaseTableCreateRequest(
            CreateDatabaseEnum createDatabase,
            String schema) {
        this.createDatabase = createDatabase;
        this.schema = schema;
    }

    /**
     * Getter for CreateDatabase.
     * Flag to indicate if the database and schema should be created if they do not exist in Falcon.
     * (Valid values: True/False)
     * @return Returns the CreateDatabaseEnum
     */
    @JsonGetter("createDatabase")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public CreateDatabaseEnum getCreateDatabase() {
        return createDatabase;
    }

    /**
     * Setter for CreateDatabase.
     * Flag to indicate if the database and schema should be created if they do not exist in Falcon.
     * (Valid values: True/False)
     * @param createDatabase Value for CreateDatabaseEnum
     */
    @JsonSetter("createDatabase")
    public void setCreateDatabase(CreateDatabaseEnum createDatabase) {
        this.createDatabase = createDatabase;
    }

    /**
     * Getter for Schema.
     * DDL of the table to be created. Example: {"database":{"name":"geo"},
     * "schema":{"name":"falcon_default_schema"}, "table":{"id":{"name":"test_table"},
     * "primary_key":[{"name":"test_pk"}], "column":[
     * {"id":{"name":"test_pk"},"size":0,"data_type":"TYPE_INT32"},
     * {"id":{"name":"test_col1"},"size":0,"data_type":"TYPE_FLOAT"},
     * {"id":{"name":"test_col2"},"data_type":"TYPE_INT64","datetime":"TYPE_DATE"},
     * {"id":{"name":"test_col3"},"size":10,"data_type":"TYPE_VAR_CHAR"} ] } }
     * @return Returns the String
     */
    @JsonGetter("schema")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getSchema() {
        return schema;
    }

    /**
     * Setter for Schema.
     * DDL of the table to be created. Example: {"database":{"name":"geo"},
     * "schema":{"name":"falcon_default_schema"}, "table":{"id":{"name":"test_table"},
     * "primary_key":[{"name":"test_pk"}], "column":[
     * {"id":{"name":"test_pk"},"size":0,"data_type":"TYPE_INT32"},
     * {"id":{"name":"test_col1"},"size":0,"data_type":"TYPE_FLOAT"},
     * {"id":{"name":"test_col2"},"data_type":"TYPE_INT64","datetime":"TYPE_DATE"},
     * {"id":{"name":"test_col3"},"size":10,"data_type":"TYPE_VAR_CHAR"} ] } }
     * @param schema Value for String
     */
    @JsonSetter("schema")
    public void setSchema(String schema) {
        this.schema = schema;
    }

    /**
     * Converts this TspublicRestV2DatabaseTableCreateRequest into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "TspublicRestV2DatabaseTableCreateRequest [" + "createDatabase=" + createDatabase
                + ", schema=" + schema + "]";
    }

    /**
     * Builds a new {@link Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .createDatabase(getCreateDatabase())
                .schema(getSchema());
        return builder;
    }

    /**
     * Class to build instances of {@link TspublicRestV2DatabaseTableCreateRequest}.
     */
    public static class Builder {
        private CreateDatabaseEnum createDatabase = CreateDatabaseEnum.ENUM_TRUE;
        private String schema;



        /**
         * Setter for createDatabase.
         * @param  createDatabase  CreateDatabaseEnum value for createDatabase.
         * @return Builder
         */
        public Builder createDatabase(CreateDatabaseEnum createDatabase) {
            this.createDatabase = createDatabase;
            return this;
        }

        /**
         * Setter for schema.
         * @param  schema  String value for schema.
         * @return Builder
         */
        public Builder schema(String schema) {
            this.schema = schema;
            return this;
        }

        /**
         * Builds a new {@link TspublicRestV2DatabaseTableCreateRequest} object using the set
         * fields.
         * @return {@link TspublicRestV2DatabaseTableCreateRequest}
         */
        public TspublicRestV2DatabaseTableCreateRequest build() {
            return new TspublicRestV2DatabaseTableCreateRequest(createDatabase, schema);
        }
    }
}
