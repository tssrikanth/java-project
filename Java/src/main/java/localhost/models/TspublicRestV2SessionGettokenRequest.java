/*
 * RESTAPISDKLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package localhost.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;

/**
 * This is a model class for TspublicRestV2SessionGettokenRequest type.
 */
public class TspublicRestV2SessionGettokenRequest {
    private String userName;
    private String password;
    private String secretKey;
    private AccessLevelEnum accessLevel;
    private String tokenExpiryDuration;

    /**
     * Default constructor.
     */
    public TspublicRestV2SessionGettokenRequest() {
        accessLevel = AccessLevelEnum.FULL;
    }

    /**
     * Initialization constructor.
     * @param  userName  String value for userName.
     * @param  password  String value for password.
     * @param  secretKey  String value for secretKey.
     * @param  accessLevel  AccessLevelEnum value for accessLevel.
     * @param  tokenExpiryDuration  String value for tokenExpiryDuration.
     */
    public TspublicRestV2SessionGettokenRequest(
            String userName,
            String password,
            String secretKey,
            AccessLevelEnum accessLevel,
            String tokenExpiryDuration) {
        this.userName = userName;
        this.password = password;
        this.secretKey = secretKey;
        this.accessLevel = accessLevel;
        this.tokenExpiryDuration = tokenExpiryDuration;
    }

    /**
     * Getter for UserName.
     * Username of the user account
     * @return Returns the String
     */
    @JsonGetter("userName")
    public String getUserName() {
        return userName;
    }

    /**
     * Setter for UserName.
     * Username of the user account
     * @param userName Value for String
     */
    @JsonSetter("userName")
    public void setUserName(String userName) {
        this.userName = userName;
    }

    /**
     * Getter for Password.
     * The password of the user account
     * @return Returns the String
     */
    @JsonGetter("password")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getPassword() {
        return password;
    }

    /**
     * Setter for Password.
     * The password of the user account
     * @param password Value for String
     */
    @JsonSetter("password")
    public void setPassword(String password) {
        this.password = password;
    }

    /**
     * Getter for SecretKey.
     * The secret key string provided by the ThoughtSpot application server. ThoughtSpot generates
     * this secret key when you enable trusted authentication.
     * @return Returns the String
     */
    @JsonGetter("secretKey")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getSecretKey() {
        return secretKey;
    }

    /**
     * Setter for SecretKey.
     * The secret key string provided by the ThoughtSpot application server. ThoughtSpot generates
     * this secret key when you enable trusted authentication.
     * @param secretKey Value for String
     */
    @JsonSetter("secretKey")
    public void setSecretKey(String secretKey) {
        this.secretKey = secretKey;
    }

    /**
     * Getter for AccessLevel.
     * User access privilege. FULL - Creates a session with full access. REPORT_BOOK_VIEW - Allow
     * view access to the specified visualizations.
     * @return Returns the AccessLevelEnum
     */
    @JsonGetter("accessLevel")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public AccessLevelEnum getAccessLevel() {
        return accessLevel;
    }

    /**
     * Setter for AccessLevel.
     * User access privilege. FULL - Creates a session with full access. REPORT_BOOK_VIEW - Allow
     * view access to the specified visualizations.
     * @param accessLevel Value for AccessLevelEnum
     */
    @JsonSetter("accessLevel")
    public void setAccessLevel(AccessLevelEnum accessLevel) {
        this.accessLevel = accessLevel;
    }

    /**
     * Getter for TokenExpiryDuration.
     * Provide duration in seconds after which the token should expire
     * @return Returns the String
     */
    @JsonGetter("tokenExpiryDuration")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getTokenExpiryDuration() {
        return tokenExpiryDuration;
    }

    /**
     * Setter for TokenExpiryDuration.
     * Provide duration in seconds after which the token should expire
     * @param tokenExpiryDuration Value for String
     */
    @JsonSetter("tokenExpiryDuration")
    public void setTokenExpiryDuration(String tokenExpiryDuration) {
        this.tokenExpiryDuration = tokenExpiryDuration;
    }

    /**
     * Converts this TspublicRestV2SessionGettokenRequest into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "TspublicRestV2SessionGettokenRequest [" + "userName=" + userName + ", password="
                + password + ", secretKey=" + secretKey + ", accessLevel=" + accessLevel
                + ", tokenExpiryDuration=" + tokenExpiryDuration + "]";
    }

    /**
     * Builds a new {@link Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(userName)
                .password(getPassword())
                .secretKey(getSecretKey())
                .accessLevel(getAccessLevel())
                .tokenExpiryDuration(getTokenExpiryDuration());
        return builder;
    }

    /**
     * Class to build instances of {@link TspublicRestV2SessionGettokenRequest}.
     */
    public static class Builder {
        private String userName;
        private String password;
        private String secretKey;
        private AccessLevelEnum accessLevel = AccessLevelEnum.FULL;
        private String tokenExpiryDuration;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  userName  String value for userName.
         */
        public Builder(String userName) {
            this.userName = userName;
        }

        /**
         * Setter for userName.
         * @param  userName  String value for userName.
         * @return Builder
         */
        public Builder userName(String userName) {
            this.userName = userName;
            return this;
        }

        /**
         * Setter for password.
         * @param  password  String value for password.
         * @return Builder
         */
        public Builder password(String password) {
            this.password = password;
            return this;
        }

        /**
         * Setter for secretKey.
         * @param  secretKey  String value for secretKey.
         * @return Builder
         */
        public Builder secretKey(String secretKey) {
            this.secretKey = secretKey;
            return this;
        }

        /**
         * Setter for accessLevel.
         * @param  accessLevel  AccessLevelEnum value for accessLevel.
         * @return Builder
         */
        public Builder accessLevel(AccessLevelEnum accessLevel) {
            this.accessLevel = accessLevel;
            return this;
        }

        /**
         * Setter for tokenExpiryDuration.
         * @param  tokenExpiryDuration  String value for tokenExpiryDuration.
         * @return Builder
         */
        public Builder tokenExpiryDuration(String tokenExpiryDuration) {
            this.tokenExpiryDuration = tokenExpiryDuration;
            return this;
        }

        /**
         * Builds a new {@link TspublicRestV2SessionGettokenRequest} object using the set fields.
         * @return {@link TspublicRestV2SessionGettokenRequest}
         */
        public TspublicRestV2SessionGettokenRequest build() {
            return new TspublicRestV2SessionGettokenRequest(userName, password, secretKey,
                    accessLevel, tokenExpiryDuration);
        }
    }
}
