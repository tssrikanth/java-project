/*
 * RESTAPISDKLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package localhost.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import java.util.List;

/**
 * This is a model class for TspublicRestV2MetadataTmlImportRequest type.
 */
public class TspublicRestV2MetadataTmlImportRequest {
    private List<String> objectTML;
    private ImportPolicyEnum importPolicy;
    private ForceCreateEnum forceCreate;

    /**
     * Default constructor.
     */
    public TspublicRestV2MetadataTmlImportRequest() {
        importPolicy = ImportPolicyEnum.PARTIAL;
        forceCreate = ForceCreateEnum.ENUM_FALSE;
    }

    /**
     * Initialization constructor.
     * @param  objectTML  List of String value for objectTML.
     * @param  importPolicy  ImportPolicyEnum value for importPolicy.
     * @param  forceCreate  ForceCreateEnum value for forceCreate.
     */
    public TspublicRestV2MetadataTmlImportRequest(
            List<String> objectTML,
            ImportPolicyEnum importPolicy,
            ForceCreateEnum forceCreate) {
        this.objectTML = objectTML;
        this.importPolicy = importPolicy;
        this.forceCreate = forceCreate;
    }

    /**
     * Getter for ObjectTML.
     * A string array of TML objects to upload, in YAML or JSON format. If TML is in YAML format,
     * then use new line characters when there is new line. Example TML: guid:
     * 6d2c1c9b-a407-409c-8c0c-819aeb51350f\ntable:\n name: TESTINT\n db: SUPPLYCHAIN_MAIN\n schema:
     * PUBLIC\n db_table: TESTINT\n connection:\n name: SnowflakeConnection\n columns:\n - name:
     * C1\n db_column_name: C1\n properties:\n column_type: MEASURE\n aggregation: SUM\n index_type:
     * DONT_INDEX\n db_column_properties:\n data_type: INT64\n Example TML in JSON format: {"guid":
     * "6d2c1c9b-a407-409c-8c0c-819aeb51350f", "table": {"name": "TESTINT", "db":
     * "SUPPLYCHAIN_MAIN", "schema": "PUBLIC", "db_table": "TESTINT","connection": { "name":
     * "SnowflakeConnection" }, "columns": [ { "name": "C1", "db_column_name": "C1", "properties": {
     * "column_type": "MEASURE", "aggregation": "SUM", "index_type": "DONT_INDEX" },
     * "db_column_properties": { "data_type": "INT64" } } ] } }
     * @return Returns the List of String
     */
    @JsonGetter("objectTML")
    public List<String> getObjectTML() {
        return objectTML;
    }

    /**
     * Setter for ObjectTML.
     * A string array of TML objects to upload, in YAML or JSON format. If TML is in YAML format,
     * then use new line characters when there is new line. Example TML: guid:
     * 6d2c1c9b-a407-409c-8c0c-819aeb51350f\ntable:\n name: TESTINT\n db: SUPPLYCHAIN_MAIN\n schema:
     * PUBLIC\n db_table: TESTINT\n connection:\n name: SnowflakeConnection\n columns:\n - name:
     * C1\n db_column_name: C1\n properties:\n column_type: MEASURE\n aggregation: SUM\n index_type:
     * DONT_INDEX\n db_column_properties:\n data_type: INT64\n Example TML in JSON format: {"guid":
     * "6d2c1c9b-a407-409c-8c0c-819aeb51350f", "table": {"name": "TESTINT", "db":
     * "SUPPLYCHAIN_MAIN", "schema": "PUBLIC", "db_table": "TESTINT","connection": { "name":
     * "SnowflakeConnection" }, "columns": [ { "name": "C1", "db_column_name": "C1", "properties": {
     * "column_type": "MEASURE", "aggregation": "SUM", "index_type": "DONT_INDEX" },
     * "db_column_properties": { "data_type": "INT64" } } ] } }
     * @param objectTML Value for List of String
     */
    @JsonSetter("objectTML")
    public void setObjectTML(List<String> objectTML) {
        this.objectTML = objectTML;
    }

    /**
     * Getter for ImportPolicy.
     * Policy to follow during import. PARTIAL - Imports all objects that validate successfully, and
     * ignores objects that do not validate successfully. ALL_OR_NONE Imports the objects that
     * validate successfully. VALIDATE_ONLY Validates the objects but does not import them.
     * @return Returns the ImportPolicyEnum
     */
    @JsonGetter("importPolicy")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public ImportPolicyEnum getImportPolicy() {
        return importPolicy;
    }

    /**
     * Setter for ImportPolicy.
     * Policy to follow during import. PARTIAL - Imports all objects that validate successfully, and
     * ignores objects that do not validate successfully. ALL_OR_NONE Imports the objects that
     * validate successfully. VALIDATE_ONLY Validates the objects but does not import them.
     * @param importPolicy Value for ImportPolicyEnum
     */
    @JsonSetter("importPolicy")
    public void setImportPolicy(ImportPolicyEnum importPolicy) {
        this.importPolicy = importPolicy;
    }

    /**
     * Getter for ForceCreate.
     * Specifies if you are updating or creating objects. To create new objects, specify true. By
     * default, ThoughtSpot updates existing objects that have the same GUID as the objects you are
     * importing. When set to true, the GUID property in the imported TML is replaced on the server,
     * and the response headers will include the id_guid property with the GUID of the new object.
     * The new object will be assigned a new GUID, even if the imported TML file included a guid
     * value. Thus, there is no need to include the guid in the TML file if you are using
     * forceCreate=true.
     * @return Returns the ForceCreateEnum
     */
    @JsonGetter("forceCreate")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public ForceCreateEnum getForceCreate() {
        return forceCreate;
    }

    /**
     * Setter for ForceCreate.
     * Specifies if you are updating or creating objects. To create new objects, specify true. By
     * default, ThoughtSpot updates existing objects that have the same GUID as the objects you are
     * importing. When set to true, the GUID property in the imported TML is replaced on the server,
     * and the response headers will include the id_guid property with the GUID of the new object.
     * The new object will be assigned a new GUID, even if the imported TML file included a guid
     * value. Thus, there is no need to include the guid in the TML file if you are using
     * forceCreate=true.
     * @param forceCreate Value for ForceCreateEnum
     */
    @JsonSetter("forceCreate")
    public void setForceCreate(ForceCreateEnum forceCreate) {
        this.forceCreate = forceCreate;
    }

    /**
     * Converts this TspublicRestV2MetadataTmlImportRequest into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "TspublicRestV2MetadataTmlImportRequest [" + "objectTML=" + objectTML
                + ", importPolicy=" + importPolicy + ", forceCreate=" + forceCreate + "]";
    }

    /**
     * Builds a new {@link Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(objectTML)
                .importPolicy(getImportPolicy())
                .forceCreate(getForceCreate());
        return builder;
    }

    /**
     * Class to build instances of {@link TspublicRestV2MetadataTmlImportRequest}.
     */
    public static class Builder {
        private List<String> objectTML;
        private ImportPolicyEnum importPolicy = ImportPolicyEnum.PARTIAL;
        private ForceCreateEnum forceCreate = ForceCreateEnum.ENUM_FALSE;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  objectTML  List of String value for objectTML.
         */
        public Builder(List<String> objectTML) {
            this.objectTML = objectTML;
        }

        /**
         * Setter for objectTML.
         * @param  objectTML  List of String value for objectTML.
         * @return Builder
         */
        public Builder objectTML(List<String> objectTML) {
            this.objectTML = objectTML;
            return this;
        }

        /**
         * Setter for importPolicy.
         * @param  importPolicy  ImportPolicyEnum value for importPolicy.
         * @return Builder
         */
        public Builder importPolicy(ImportPolicyEnum importPolicy) {
            this.importPolicy = importPolicy;
            return this;
        }

        /**
         * Setter for forceCreate.
         * @param  forceCreate  ForceCreateEnum value for forceCreate.
         * @return Builder
         */
        public Builder forceCreate(ForceCreateEnum forceCreate) {
            this.forceCreate = forceCreate;
            return this;
        }

        /**
         * Builds a new {@link TspublicRestV2MetadataTmlImportRequest} object using the set fields.
         * @return {@link TspublicRestV2MetadataTmlImportRequest}
         */
        public TspublicRestV2MetadataTmlImportRequest build() {
            return new TspublicRestV2MetadataTmlImportRequest(objectTML, importPolicy, forceCreate);
        }
    }
}
