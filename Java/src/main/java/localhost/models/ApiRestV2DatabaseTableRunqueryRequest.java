/*
 * RESTAPISDKLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package localhost.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonSetter;
import java.util.List;

/**
 * This is a model class for ApiRestV2DatabaseTableRunqueryRequest type.
 */
public class ApiRestV2DatabaseTableRunqueryRequest {
    private List<String> statement;

    /**
     * Default constructor.
     */
    public ApiRestV2DatabaseTableRunqueryRequest() {
    }

    /**
     * Initialization constructor.
     * @param  statement  List of String value for statement.
     */
    public ApiRestV2DatabaseTableRunqueryRequest(
            List<String> statement) {
        this.statement = statement;
    }

    /**
     * Getter for Statement.
     * A JSON array of TQL statements. Each TQL statement should end with semi-colon (;). The TQL
     * operations that can be run through this API are restricted to create database and schema,
     * alter table, delete and update table rows. If a TQL statement fails, then the subsequent
     * statements in the array are not run. Example: alter table test_db.test_schema.test_table drop
     * contraint primary key;
     * @return Returns the List of String
     */
    @JsonGetter("statement")
    public List<String> getStatement() {
        return statement;
    }

    /**
     * Setter for Statement.
     * A JSON array of TQL statements. Each TQL statement should end with semi-colon (;). The TQL
     * operations that can be run through this API are restricted to create database and schema,
     * alter table, delete and update table rows. If a TQL statement fails, then the subsequent
     * statements in the array are not run. Example: alter table test_db.test_schema.test_table drop
     * contraint primary key;
     * @param statement Value for List of String
     */
    @JsonSetter("statement")
    public void setStatement(List<String> statement) {
        this.statement = statement;
    }

    /**
     * Converts this ApiRestV2DatabaseTableRunqueryRequest into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "ApiRestV2DatabaseTableRunqueryRequest [" + "statement=" + statement + "]";
    }

    /**
     * Builds a new {@link ApiRestV2DatabaseTableRunqueryRequest.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link ApiRestV2DatabaseTableRunqueryRequest.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(statement);
        return builder;
    }

    /**
     * Class to build instances of {@link ApiRestV2DatabaseTableRunqueryRequest}.
     */
    public static class Builder {
        private List<String> statement;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  statement  List of String value for statement.
         */
        public Builder(List<String> statement) {
            this.statement = statement;
        }

        /**
         * Setter for statement.
         * @param  statement  List of String value for statement.
         * @return Builder
         */
        public Builder statement(List<String> statement) {
            this.statement = statement;
            return this;
        }

        /**
         * Builds a new {@link ApiRestV2DatabaseTableRunqueryRequest} object using the set fields.
         * @return {@link ApiRestV2DatabaseTableRunqueryRequest}
         */
        public ApiRestV2DatabaseTableRunqueryRequest build() {
            return new ApiRestV2DatabaseTableRunqueryRequest(statement);
        }
    }
}
