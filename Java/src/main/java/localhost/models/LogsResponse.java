/*
 * RESTAPISDKLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package localhost.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;

/**
 * This is a model class for LogsResponse type.
 */
public class LogsResponse {
    private String date;
    private String log;

    /**
     * Default constructor.
     */
    public LogsResponse() {
    }

    /**
     * Initialization constructor.
     * @param  date  String value for date.
     * @param  log  String value for log.
     */
    public LogsResponse(
            String date,
            String log) {
        this.date = date;
        this.log = log;
    }

    /**
     * Getter for Date.
     * Date and time for the event in the log
     * @return Returns the String
     */
    @JsonGetter("date")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getDate() {
        return date;
    }

    /**
     * Setter for Date.
     * Date and time for the event in the log
     * @param date Value for String
     */
    @JsonSetter("date")
    public void setDate(String date) {
        this.date = date;
    }

    /**
     * Getter for Log.
     * Logged event at the time specified in JSON format. This includes, Event ID, A unique
     * description of the event, for example, User login failed, Timestamp, User ID of the person
     * initiating the event and IP address of the ThoughtSpot instance.
     * @return Returns the String
     */
    @JsonGetter("log")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getLog() {
        return log;
    }

    /**
     * Setter for Log.
     * Logged event at the time specified in JSON format. This includes, Event ID, A unique
     * description of the event, for example, User login failed, Timestamp, User ID of the person
     * initiating the event and IP address of the ThoughtSpot instance.
     * @param log Value for String
     */
    @JsonSetter("log")
    public void setLog(String log) {
        this.log = log;
    }

    /**
     * Converts this LogsResponse into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "LogsResponse [" + "date=" + date + ", log=" + log + "]";
    }

    /**
     * Builds a new {@link Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .date(getDate())
                .log(getLog());
        return builder;
    }

    /**
     * Class to build instances of {@link LogsResponse}.
     */
    public static class Builder {
        private String date;
        private String log;



        /**
         * Setter for date.
         * @param  date  String value for date.
         * @return Builder
         */
        public Builder date(String date) {
            this.date = date;
            return this;
        }

        /**
         * Setter for log.
         * @param  log  String value for log.
         * @return Builder
         */
        public Builder log(String log) {
            this.log = log;
            return this;
        }

        /**
         * Builds a new {@link LogsResponse} object using the set fields.
         * @return {@link LogsResponse}
         */
        public LogsResponse build() {
            return new LogsResponse(date, log);
        }
    }
}
