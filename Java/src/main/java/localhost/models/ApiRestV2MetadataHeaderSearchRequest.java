/*
 * RESTAPISDKLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package localhost.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import java.util.List;

/**
 * This is a model class for ApiRestV2MetadataHeaderSearchRequest type.
 */
public class ApiRestV2MetadataHeaderSearchRequest {
    private List<String> outputFields;
    private Integer offset;
    private Integer batchSize;
    private SortByEnum sortBy;
    private SortOrderEnum sortOrder;
    private Type10Enum type;
    private String namePattern;
    private List<String> fetchId;
    private List<String> skipId;
    private Boolean showHidden;
    private AutoCreatedEnum autoCreated;
    private List<AccessLevelInput> accessLevel;
    private List<TagNameAndIdInput> tag;
    private List<NameAndIdInput> favoriteFor;
    private List<NameAndIdInput> createdBy;
    private List<NameAndIdInput> lastModifiedBy;
    private List<NameAndIdInput> ownedBy;

    /**
     * Default constructor.
     */
    public ApiRestV2MetadataHeaderSearchRequest() {
        offset = 0;
        sortBy = SortByEnum.DEFAULT;
        sortOrder = SortOrderEnum.DEFAULT;
        showHidden = false;
    }

    /**
     * Initialization constructor.
     * @param  type  Type10Enum value for type.
     * @param  outputFields  List of String value for outputFields.
     * @param  offset  Integer value for offset.
     * @param  batchSize  Integer value for batchSize.
     * @param  sortBy  SortByEnum value for sortBy.
     * @param  sortOrder  SortOrderEnum value for sortOrder.
     * @param  namePattern  String value for namePattern.
     * @param  fetchId  List of String value for fetchId.
     * @param  skipId  List of String value for skipId.
     * @param  showHidden  Boolean value for showHidden.
     * @param  autoCreated  AutoCreatedEnum value for autoCreated.
     * @param  accessLevel  List of AccessLevelInput value for accessLevel.
     * @param  tag  List of TagNameAndIdInput value for tag.
     * @param  favoriteFor  List of NameAndIdInput value for favoriteFor.
     * @param  createdBy  List of NameAndIdInput value for createdBy.
     * @param  lastModifiedBy  List of NameAndIdInput value for lastModifiedBy.
     * @param  ownedBy  List of NameAndIdInput value for ownedBy.
     */
    public ApiRestV2MetadataHeaderSearchRequest(
            Type10Enum type,
            List<String> outputFields,
            Integer offset,
            Integer batchSize,
            SortByEnum sortBy,
            SortOrderEnum sortOrder,
            String namePattern,
            List<String> fetchId,
            List<String> skipId,
            Boolean showHidden,
            AutoCreatedEnum autoCreated,
            List<AccessLevelInput> accessLevel,
            List<TagNameAndIdInput> tag,
            List<NameAndIdInput> favoriteFor,
            List<NameAndIdInput> createdBy,
            List<NameAndIdInput> lastModifiedBy,
            List<NameAndIdInput> ownedBy) {
        this.outputFields = outputFields;
        this.offset = offset;
        this.batchSize = batchSize;
        this.sortBy = sortBy;
        this.sortOrder = sortOrder;
        this.type = type;
        this.namePattern = namePattern;
        this.fetchId = fetchId;
        this.skipId = skipId;
        this.showHidden = showHidden;
        this.autoCreated = autoCreated;
        this.accessLevel = accessLevel;
        this.tag = tag;
        this.favoriteFor = favoriteFor;
        this.createdBy = createdBy;
        this.lastModifiedBy = lastModifiedBy;
        this.ownedBy = ownedBy;
    }

    /**
     * Getter for OutputFields.
     * Array of header field names that need to be included in the header response
     * @return Returns the List of String
     */
    @JsonGetter("outputFields")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<String> getOutputFields() {
        return outputFields;
    }

    /**
     * Setter for OutputFields.
     * Array of header field names that need to be included in the header response
     * @param outputFields Value for List of String
     */
    @JsonSetter("outputFields")
    public void setOutputFields(List<String> outputFields) {
        this.outputFields = outputFields;
    }

    /**
     * Getter for Offset.
     * The offset point, starting from where the records should be included in the response. If no
     * input is provided then offset starts from 0.
     * @return Returns the Integer
     */
    @JsonGetter("offset")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getOffset() {
        return offset;
    }

    /**
     * Setter for Offset.
     * The offset point, starting from where the records should be included in the response. If no
     * input is provided then offset starts from 0.
     * @param offset Value for Integer
     */
    @JsonSetter("offset")
    public void setOffset(Integer offset) {
        this.offset = offset;
    }

    /**
     * Getter for BatchSize.
     * The number of records that should be included in the response starting from offset position.
     * If no input is provided, then all records starting from the value provided in offset is
     * included in the response.
     * @return Returns the Integer
     */
    @JsonGetter("batchSize")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getBatchSize() {
        return batchSize;
    }

    /**
     * Setter for BatchSize.
     * The number of records that should be included in the response starting from offset position.
     * If no input is provided, then all records starting from the value provided in offset is
     * included in the response.
     * @param batchSize Value for Integer
     */
    @JsonSetter("batchSize")
    public void setBatchSize(Integer batchSize) {
        this.batchSize = batchSize;
    }

    /**
     * Getter for SortBy.
     * Field based on which the response needs to be ordered.
     * @return Returns the SortByEnum
     */
    @JsonGetter("sortBy")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public SortByEnum getSortBy() {
        return sortBy;
    }

    /**
     * Setter for SortBy.
     * Field based on which the response needs to be ordered.
     * @param sortBy Value for SortByEnum
     */
    @JsonSetter("sortBy")
    public void setSortBy(SortByEnum sortBy) {
        this.sortBy = sortBy;
    }

    /**
     * Getter for SortOrder.
     * Order in which sortBy should be applied.
     * @return Returns the SortOrderEnum
     */
    @JsonGetter("sortOrder")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public SortOrderEnum getSortOrder() {
        return sortOrder;
    }

    /**
     * Setter for SortOrder.
     * Order in which sortBy should be applied.
     * @param sortOrder Value for SortOrderEnum
     */
    @JsonSetter("sortOrder")
    public void setSortOrder(SortOrderEnum sortOrder) {
        this.sortOrder = sortOrder;
    }

    /**
     * Getter for Type.
     * Type of the metadata object being searched.
     * @return Returns the Type10Enum
     */
    @JsonGetter("type")
    public Type10Enum getType() {
        return type;
    }

    /**
     * Setter for Type.
     * Type of the metadata object being searched.
     * @param type Value for Type10Enum
     */
    @JsonSetter("type")
    public void setType(Type10Enum type) {
        this.type = type;
    }

    /**
     * Getter for NamePattern.
     * A pattern to match the name of the metadata object. This parameter supports matching
     * case-insensitive strings. For a wildcard match, use %.
     * @return Returns the String
     */
    @JsonGetter("namePattern")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getNamePattern() {
        return namePattern;
    }

    /**
     * Setter for NamePattern.
     * A pattern to match the name of the metadata object. This parameter supports matching
     * case-insensitive strings. For a wildcard match, use %.
     * @param namePattern Value for String
     */
    @JsonSetter("namePattern")
    public void setNamePattern(String namePattern) {
        this.namePattern = namePattern;
    }

    /**
     * Getter for FetchId.
     * A JSON array containing the GUIDs of the metadata objects that you want to fetch.
     * @return Returns the List of String
     */
    @JsonGetter("fetchId")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<String> getFetchId() {
        return fetchId;
    }

    /**
     * Setter for FetchId.
     * A JSON array containing the GUIDs of the metadata objects that you want to fetch.
     * @param fetchId Value for List of String
     */
    @JsonSetter("fetchId")
    public void setFetchId(List<String> fetchId) {
        this.fetchId = fetchId;
    }

    /**
     * Getter for SkipId.
     * A JSON array containing the GUIDs of the metadata objects that you want to skip.
     * @return Returns the List of String
     */
    @JsonGetter("skipId")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<String> getSkipId() {
        return skipId;
    }

    /**
     * Setter for SkipId.
     * A JSON array containing the GUIDs of the metadata objects that you want to skip.
     * @param skipId Value for List of String
     */
    @JsonSetter("skipId")
    public void setSkipId(List<String> skipId) {
        this.skipId = skipId;
    }

    /**
     * Getter for ShowHidden.
     * When set to true, returns details of the hidden objects, such as a column in a worksheet or a
     * table.
     * @return Returns the Boolean
     */
    @JsonGetter("showHidden")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Boolean getShowHidden() {
        return showHidden;
    }

    /**
     * Setter for ShowHidden.
     * When set to true, returns details of the hidden objects, such as a column in a worksheet or a
     * table.
     * @param showHidden Value for Boolean
     */
    @JsonSetter("showHidden")
    public void setShowHidden(Boolean showHidden) {
        this.showHidden = showHidden;
    }

    /**
     * Getter for AutoCreated.
     * String for UI and backend boolean- A flag to indicate whether to list only the auto created
     * objects. When no value is provided as input then all objects are returned.
     * @return Returns the AutoCreatedEnum
     */
    @JsonGetter("autoCreated")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public AutoCreatedEnum getAutoCreated() {
        return autoCreated;
    }

    /**
     * Setter for AutoCreated.
     * String for UI and backend boolean- A flag to indicate whether to list only the auto created
     * objects. When no value is provided as input then all objects are returned.
     * @param autoCreated Value for AutoCreatedEnum
     */
    @JsonSetter("autoCreated")
    public void setAutoCreated(AutoCreatedEnum autoCreated) {
        this.autoCreated = autoCreated;
    }

    /**
     * Getter for AccessLevel.
     * A JSON array of objects with user details for which the metadata objects should be considered
     * from the repository If you specify ID or name of user and set the type parameter to USER, the
     * API returns metadata objects associated with the user If you specify ID or name of user group
     * and set the type parameter to USER_GROUP, the API returns metadata objects for all the users
     * mapped to the specified user group. If the id or name parameter is not defined, but the type
     * attribute is set to USER or USER_GROUP, then the API will not return and response. If no
     * input is provided for any field for this object, then the API returns headers for all users.
     * If both name and id is provided, then id will be considered.
     * @return Returns the List of AccessLevelInput
     */
    @JsonGetter("accessLevel")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<AccessLevelInput> getAccessLevel() {
        return accessLevel;
    }

    /**
     * Setter for AccessLevel.
     * A JSON array of objects with user details for which the metadata objects should be considered
     * from the repository If you specify ID or name of user and set the type parameter to USER, the
     * API returns metadata objects associated with the user If you specify ID or name of user group
     * and set the type parameter to USER_GROUP, the API returns metadata objects for all the users
     * mapped to the specified user group. If the id or name parameter is not defined, but the type
     * attribute is set to USER or USER_GROUP, then the API will not return and response. If no
     * input is provided for any field for this object, then the API returns headers for all users.
     * If both name and id is provided, then id will be considered.
     * @param accessLevel Value for List of AccessLevelInput
     */
    @JsonSetter("accessLevel")
    public void setAccessLevel(List<AccessLevelInput> accessLevel) {
        this.accessLevel = accessLevel;
    }

    /**
     * Getter for Tag.
     * A JSON array of name or GUID of tags or both. When both are given then id is considered.
     * @return Returns the List of TagNameAndIdInput
     */
    @JsonGetter("tag")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<TagNameAndIdInput> getTag() {
        return tag;
    }

    /**
     * Setter for Tag.
     * A JSON array of name or GUID of tags or both. When both are given then id is considered.
     * @param tag Value for List of TagNameAndIdInput
     */
    @JsonSetter("tag")
    public void setTag(List<TagNameAndIdInput> tag) {
        this.tag = tag;
    }

    /**
     * Getter for FavoriteFor.
     * A JSON array of name or GUID of the user or both for whom the object is assigned as favorite.
     * When both are given then id is considered.
     * @return Returns the List of NameAndIdInput
     */
    @JsonGetter("favoriteFor")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<NameAndIdInput> getFavoriteFor() {
        return favoriteFor;
    }

    /**
     * Setter for FavoriteFor.
     * A JSON array of name or GUID of the user or both for whom the object is assigned as favorite.
     * When both are given then id is considered.
     * @param favoriteFor Value for List of NameAndIdInput
     */
    @JsonSetter("favoriteFor")
    public void setFavoriteFor(List<NameAndIdInput> favoriteFor) {
        this.favoriteFor = favoriteFor;
    }

    /**
     * Getter for CreatedBy.
     * A JSON array of name or GUID of the user or both who created the object. When both are given
     * then id is considered.
     * @return Returns the List of NameAndIdInput
     */
    @JsonGetter("createdBy")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<NameAndIdInput> getCreatedBy() {
        return createdBy;
    }

    /**
     * Setter for CreatedBy.
     * A JSON array of name or GUID of the user or both who created the object. When both are given
     * then id is considered.
     * @param createdBy Value for List of NameAndIdInput
     */
    @JsonSetter("createdBy")
    public void setCreatedBy(List<NameAndIdInput> createdBy) {
        this.createdBy = createdBy;
    }

    /**
     * Getter for LastModifiedBy.
     * A JSON array of name or GUID of the user or both who last modified the object. When both are
     * given then id is considered.
     * @return Returns the List of NameAndIdInput
     */
    @JsonGetter("lastModifiedBy")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<NameAndIdInput> getLastModifiedBy() {
        return lastModifiedBy;
    }

    /**
     * Setter for LastModifiedBy.
     * A JSON array of name or GUID of the user or both who last modified the object. When both are
     * given then id is considered.
     * @param lastModifiedBy Value for List of NameAndIdInput
     */
    @JsonSetter("lastModifiedBy")
    public void setLastModifiedBy(List<NameAndIdInput> lastModifiedBy) {
        this.lastModifiedBy = lastModifiedBy;
    }

    /**
     * Getter for OwnedBy.
     * A JSON array of name or GUID of the user or both who last modified the object. When both are
     * given then id is considered.
     * @return Returns the List of NameAndIdInput
     */
    @JsonGetter("ownedBy")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<NameAndIdInput> getOwnedBy() {
        return ownedBy;
    }

    /**
     * Setter for OwnedBy.
     * A JSON array of name or GUID of the user or both who last modified the object. When both are
     * given then id is considered.
     * @param ownedBy Value for List of NameAndIdInput
     */
    @JsonSetter("ownedBy")
    public void setOwnedBy(List<NameAndIdInput> ownedBy) {
        this.ownedBy = ownedBy;
    }

    /**
     * Converts this ApiRestV2MetadataHeaderSearchRequest into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "ApiRestV2MetadataHeaderSearchRequest [" + "type=" + type + ", outputFields="
                + outputFields + ", offset=" + offset + ", batchSize=" + batchSize + ", sortBy="
                + sortBy + ", sortOrder=" + sortOrder + ", namePattern=" + namePattern
                + ", fetchId=" + fetchId + ", skipId=" + skipId + ", showHidden=" + showHidden
                + ", autoCreated=" + autoCreated + ", accessLevel=" + accessLevel + ", tag=" + tag
                + ", favoriteFor=" + favoriteFor + ", createdBy=" + createdBy + ", lastModifiedBy="
                + lastModifiedBy + ", ownedBy=" + ownedBy + "]";
    }

    /**
     * Builds a new {@link ApiRestV2MetadataHeaderSearchRequest.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link ApiRestV2MetadataHeaderSearchRequest.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(type)
                .outputFields(getOutputFields())
                .offset(getOffset())
                .batchSize(getBatchSize())
                .sortBy(getSortBy())
                .sortOrder(getSortOrder())
                .namePattern(getNamePattern())
                .fetchId(getFetchId())
                .skipId(getSkipId())
                .showHidden(getShowHidden())
                .autoCreated(getAutoCreated())
                .accessLevel(getAccessLevel())
                .tag(getTag())
                .favoriteFor(getFavoriteFor())
                .createdBy(getCreatedBy())
                .lastModifiedBy(getLastModifiedBy())
                .ownedBy(getOwnedBy());
        return builder;
    }

    /**
     * Class to build instances of {@link ApiRestV2MetadataHeaderSearchRequest}.
     */
    public static class Builder {
        private Type10Enum type;
        private List<String> outputFields;
        private Integer offset = 0;
        private Integer batchSize;
        private SortByEnum sortBy = SortByEnum.DEFAULT;
        private SortOrderEnum sortOrder = SortOrderEnum.DEFAULT;
        private String namePattern;
        private List<String> fetchId;
        private List<String> skipId;
        private Boolean showHidden = false;
        private AutoCreatedEnum autoCreated;
        private List<AccessLevelInput> accessLevel;
        private List<TagNameAndIdInput> tag;
        private List<NameAndIdInput> favoriteFor;
        private List<NameAndIdInput> createdBy;
        private List<NameAndIdInput> lastModifiedBy;
        private List<NameAndIdInput> ownedBy;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  type  Type10Enum value for type.
         */
        public Builder(Type10Enum type) {
            this.type = type;
        }

        /**
         * Setter for type.
         * @param  type  Type10Enum value for type.
         * @return Builder
         */
        public Builder type(Type10Enum type) {
            this.type = type;
            return this;
        }

        /**
         * Setter for outputFields.
         * @param  outputFields  List of String value for outputFields.
         * @return Builder
         */
        public Builder outputFields(List<String> outputFields) {
            this.outputFields = outputFields;
            return this;
        }

        /**
         * Setter for offset.
         * @param  offset  Integer value for offset.
         * @return Builder
         */
        public Builder offset(Integer offset) {
            this.offset = offset;
            return this;
        }

        /**
         * Setter for batchSize.
         * @param  batchSize  Integer value for batchSize.
         * @return Builder
         */
        public Builder batchSize(Integer batchSize) {
            this.batchSize = batchSize;
            return this;
        }

        /**
         * Setter for sortBy.
         * @param  sortBy  SortByEnum value for sortBy.
         * @return Builder
         */
        public Builder sortBy(SortByEnum sortBy) {
            this.sortBy = sortBy;
            return this;
        }

        /**
         * Setter for sortOrder.
         * @param  sortOrder  SortOrderEnum value for sortOrder.
         * @return Builder
         */
        public Builder sortOrder(SortOrderEnum sortOrder) {
            this.sortOrder = sortOrder;
            return this;
        }

        /**
         * Setter for namePattern.
         * @param  namePattern  String value for namePattern.
         * @return Builder
         */
        public Builder namePattern(String namePattern) {
            this.namePattern = namePattern;
            return this;
        }

        /**
         * Setter for fetchId.
         * @param  fetchId  List of String value for fetchId.
         * @return Builder
         */
        public Builder fetchId(List<String> fetchId) {
            this.fetchId = fetchId;
            return this;
        }

        /**
         * Setter for skipId.
         * @param  skipId  List of String value for skipId.
         * @return Builder
         */
        public Builder skipId(List<String> skipId) {
            this.skipId = skipId;
            return this;
        }

        /**
         * Setter for showHidden.
         * @param  showHidden  Boolean value for showHidden.
         * @return Builder
         */
        public Builder showHidden(Boolean showHidden) {
            this.showHidden = showHidden;
            return this;
        }

        /**
         * Setter for autoCreated.
         * @param  autoCreated  AutoCreatedEnum value for autoCreated.
         * @return Builder
         */
        public Builder autoCreated(AutoCreatedEnum autoCreated) {
            this.autoCreated = autoCreated;
            return this;
        }

        /**
         * Setter for accessLevel.
         * @param  accessLevel  List of AccessLevelInput value for accessLevel.
         * @return Builder
         */
        public Builder accessLevel(List<AccessLevelInput> accessLevel) {
            this.accessLevel = accessLevel;
            return this;
        }

        /**
         * Setter for tag.
         * @param  tag  List of TagNameAndIdInput value for tag.
         * @return Builder
         */
        public Builder tag(List<TagNameAndIdInput> tag) {
            this.tag = tag;
            return this;
        }

        /**
         * Setter for favoriteFor.
         * @param  favoriteFor  List of NameAndIdInput value for favoriteFor.
         * @return Builder
         */
        public Builder favoriteFor(List<NameAndIdInput> favoriteFor) {
            this.favoriteFor = favoriteFor;
            return this;
        }

        /**
         * Setter for createdBy.
         * @param  createdBy  List of NameAndIdInput value for createdBy.
         * @return Builder
         */
        public Builder createdBy(List<NameAndIdInput> createdBy) {
            this.createdBy = createdBy;
            return this;
        }

        /**
         * Setter for lastModifiedBy.
         * @param  lastModifiedBy  List of NameAndIdInput value for lastModifiedBy.
         * @return Builder
         */
        public Builder lastModifiedBy(List<NameAndIdInput> lastModifiedBy) {
            this.lastModifiedBy = lastModifiedBy;
            return this;
        }

        /**
         * Setter for ownedBy.
         * @param  ownedBy  List of NameAndIdInput value for ownedBy.
         * @return Builder
         */
        public Builder ownedBy(List<NameAndIdInput> ownedBy) {
            this.ownedBy = ownedBy;
            return this;
        }

        /**
         * Builds a new {@link ApiRestV2MetadataHeaderSearchRequest} object using the set fields.
         * @return {@link ApiRestV2MetadataHeaderSearchRequest}
         */
        public ApiRestV2MetadataHeaderSearchRequest build() {
            return new ApiRestV2MetadataHeaderSearchRequest(type, outputFields, offset, batchSize,
                    sortBy, sortOrder, namePattern, fetchId, skipId, showHidden, autoCreated,
                    accessLevel, tag, favoriteFor, createdBy, lastModifiedBy, ownedBy);
        }
    }
}
